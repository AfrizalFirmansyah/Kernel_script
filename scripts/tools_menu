#!/bin/bash

#    BroadcomCM kernel auto-maker menu - scripts/tools_menu
#    Copyright (C) 2013  Team BroadcomCM
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Clear the console
  clear

# Moving to correct path
cd ../
cd common

# Introducing test 
  echo
  echo "${t_bold}-----------------------------------"
  echo " BroadcomCM kernel auto-maker menu"
  echo "-----------------------------------"
  echo "${t_normal} Version $version"
  echo
  echo "Device selected is $KBUILD_BCM_MENU"
  echo
  echo

# Question:
  echo "${t_bold} What you want to do?${t_normal} Choose a letter:"

# Options:
  echo "   a. Make Menuconfig"
  echo "   b. Make Menuconfig with saving new config to cyanogenmod_$KBUILD_BCM_MENU''_defconfig"
  echo "   c. Make Menuconfig with saving new config to input name"
  echo
  echo "   d. Load another defconfig"
  echo
  echo "   e. Make clean"
  echo "   f. Make distclean"
  echo
  echo "   g. Make kernel zImage"
  echo "   h. Make kernel zImage + boot.img with common ramdisk"
  echo "   i. Make kernel zImage + boot.img with yours ramdisk"
  echo
  echo "   j. Exit"
  echo "   k. Restart"

# Read letter user gives
  read enterToolsLetter

# If an option selected...
if [ "$enterToolsLetter" == "a" ]
then
  make menuconfig -j`grep processor /proc/cpuinfo | wc -l`
  ../BCMKAMM/scripts/tools_menu

elif [ "$enterToolsLetter" == "b" ]
  make menuconfig -j`grep processor /proc/cpuinfo | wc -l`
  cp .config arch/arm/configs/cyanogenmod_$KBUILD_BCM_MENU''_defconfig
  echo "Old cyanogenmod_$KBUILD_BCM_MENU""_defconfig has been replaced with new one"
  echo "Press enter to continue..."
  read enterKey1
  ../BCMKAMM/scripts/tools_menu

elif [ "$enterToolsLetter" == "c" ]
  make menuconfig -j`grep processor /proc/cpuinfo | wc -l`
  echo "Enter your new defconfig name... (excluding _defconfig)"
  read enterName
  if [ "$enterName" == "" ]
    echo "The name could not be only _defconfig!!!"
    echo "Press enter to retry..."
    read enterKey2
    ../BCMKAMM/scripts/tools_menu
  else
    cp .config arch/arm/configs/$enterName''_defconfig
    echo "Config saved, press enter to continue"
    read enterKey3
    ../BCMKAMM/scripts/tools_menu
  fi

elif [ "$enterToolsLetter" == "d" ]
    echo "Type the name of the config (including _defconfig if the name includes that)"
    echo "The config must be located in arch/arm/configs"
    read enterConfig
    FN=$(find arch/arm/configs/$enterConfig)
    if [ "$FN" == "arch/arm/configs/$enterConfig" ]
      echo "Config exists, making now..."
      make $enterConfig -j`grep processor /proc/cpuinfo | wc -l`
      echo "New config made, press enter to continue..."
      read enterKey4
      ../BCMKAMM/scripts/tools_menu
    else
      echo "Config does not exist, please check the name and retry"
      read enterKey5
      ../BCMKAMM/scripts/tools_menu
    fi

elif [ "$enterToolsLetter" == "e" ]
    echo "Making clean..."
    make clean -j`grep processor /proc/cpuinfo | wc -l`
    echo "Press enter to continue"
    read enterKey6

elif [ "$enterToolsLetter" == "f" ]
    echo "Making dist clean..."
    make distclean -j`grep processor /proc/cpuinfo | wc -l`
    echo "Press enter to continue"
    read enterKey7

elif [ "$enterToolsLetter" == "g" ]
    echo "Starting build of kernel..."
    echo "Press enter to continue..."
    read enterKey8
    make -j`grep processor /proc/cpuinfo | wc -l`

elif [ "$enterToolsLetter" == "h" ]
    echo ZONE WORK IN PROGRESS...
    read enterKey9

elif [ "$enterToolsLetter" == "i" ]
    echo ZONE WORK IN PROGRESS...
    read enterKey10

elif [ "$enterToolsLetter" == "j" ]
    exit

elif [ "$enterToolsLetter" == "k" ]
    ../BCMKAMM/menu
